steps:
  - id: "branch name"
    name: "alpine"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "********************************************************************************"
        echo "Running branch: $BRANCH_NAME"
        echo "********************************************************************************"
  # [START tf-init]
  - id: "tf init"
    name: "hashicorp/terraform:1.4.5"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        cd "infrastructure/gcp/environments/prod/"
        echo "terraform {" >> backend.tf
        echo "  required_providers {" >> backend.tf
        echo "    google = {" >> backend.tf
        echo "      source  = \"hashicorp/google\"" >> backend.tf
        echo "      version = \"~> 4.78.0\"" >> backend.tf
        echo "    }" >> backend.tf
        echo "    google-beta = {" >> backend.tf
        echo "      source  = \"hashicorp/google-beta\"" >> backend.tf
        echo "      version = \"~> 4.78.0\"" >> backend.tf
        echo "    }" >> backend.tf
        echo "  }" >> backend.tf
        echo "  backend \"gcs\" {" >> backend.tf
        echo "    bucket = \"${PROJECT_ID}-${_PROJECT_REGION}-state\"" >> backend.tf
        echo "  }" >> backend.tf
        echo "}" >> backend.tf
        echo "project = \"${PROJECT_ID}\"" >> environment.auto.tfvars
        echo "artifact_repository = \"projects-docker-repo\"" >> environment.auto.tfvars
        terraform init || exit 1
  # [END tf-init]
  # [START tf-validate]
  - id: "tf validate"
    name: "hashicorp/terraform:1.4.5"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        cd "infrastructure/gcp/environments/prod/"
          terraform validate || exit 1

  # [END tf-validate]
  # [START tf-plan]
  - id: "tf plan"
    name: "hashicorp/terraform:1.4.5"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        cd "infrastructure/gcp/environments/prod/"
          terraform plan || exit 1
  # [END tf-plan]
  # [START tf-apply]
  - id: "tf apply"
    name: "hashicorp/terraform:1.4.5"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "Applying terraform changes for trigger $TRIGGER_NAME"

        if [[ "$TRIGGER_NAME" == "provision-setup-projects" ]]; then
          echo "Applying terraform changes..."
          cd infrastructure/environments/prod/
          export TF_LOG=
          terraform apply -auto-approve
        fi
    # [END tf-apply]
substitutions:
  _PROJECT_REGION: "europe-west2" # London
